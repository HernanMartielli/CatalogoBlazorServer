@page "/ArticulosPorMedidas"
@using CatalogoBlazorServer.Models
@using CatalogoBlazorServer.Data.Repositorio
@inject IRepositorio Repositorio;




<div class="medidasCabecera">
    <div class="medidasCabeceraTitulo">
        <h3>Rodamientos por Medidas</h3>
    </div>
    <div  class="medidasCabeceraSelects">
        <EditForm Model="@Rubros">
            <InputSelect Class="form-group btn-primary dropdown-toggle  "
                            Value="@idRubro"
                            ValueChanged="@((string  idRubro) => RubroHasChanged(idRubro) )"
                            ValueExpression="@(() => idRubro)">
                <option value="0">Seleccione el Rubro...</option>
                @foreach (var rubro in Rubros)
                {
                    <option value="@rubro.Iden">@rubro.Detalle</option>
                }
            </InputSelect>
         </EditForm>

         <EditForm Model="@SubRubros">
            <InputSelectNumber Class="form-group btn-primary ml-5" id="inputSubRubro"
                                Value="@idSubRubro"
                                ValueChanged="@((int idSubRubro) => SubRubroHasChanged(idSubRubro) )"
                                ValueExpression="@(() => idSubRubro)">
                <option value=0>Seleccione subrubro...</option>
                @foreach (var subrubro in SubRubros)
                {
                    <option value="@subrubro.Iden">@subrubro.Detalle</option>
                }
            </InputSelectNumber>
        </EditForm>

        <button type="button" class="btn btn-primary mx-2" @onclick="BuscarArticulos">Filtrar</button>
        <button type="button" class="btn btn-danger mx-2"  @onclick="ClearInputs">Limpiar</button>

    </div>

    <div class="medidasCabeceraImgSubRubro">
        @if (!string.IsNullOrEmpty(imagenSubrubro))
        {
            <img class="imgSubRubro" src="Images/SubRubros/@imagenSubrubro" alt="imgen"/>

        }
    </div>



   
    @if (idSubRubro != 0)
    { 
        @foreach (SubRubro item in SubRubros)
        {
            if (item.Iden==idSubRubro)
            {
                <div  class="medidasCabeceraInputs">
                    @if (@item.NbreMedida1.Trim()!= string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreMedida1.Trim()</label>
                            <input type="number" pattern="[0-9]+([\.,][0-9]+)?" id="M1" @bind=Med1  maxlength="7" size="4" class="valorMedida"> 
                        </div>
                    }
                    @if (@item.NbreMedida2.Trim() != string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreMedida2.Trim()</label>
                            <input type="text" id="M2"@bind=Med2 maxlength="7"  size="4" class="valorMedida"> 
                        </div>
                    }
                    @if (@item.NbreMedida3.Trim() != string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreMedida3.Trim()</label>
                            <input type="text" id="M3" @bind=Med3 maxlength="7"  size="4" class="valorMedida"> 
                        </div>
                    }
                    @if (@item.NbreMedida4.Trim() != string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreMedida4.Trim()</label>
                            <input type="text" id="M4" @bind=Med4  maxlength="7" size="4" class="valorMedida"> 
                        </div>
                    }
                    @if (@item.NbreMedida5.Trim() != string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreMedida5.Trim()</label>
                            <input type="text" id="M5" @bind=Med5 maxlength="7" size="4" class="valorMedida"> 
                        </div>
                    }
                    @if (@item.NbreMedida6.Trim() != string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreMedida6.Trim()</label>
                            <input type="text" id="M6" @bind=Med6  maxlength="7" size="4" class="valorMedida" > 
                        </div>
                    }
                    @if (@item.NbreInfo1.Trim()!= string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreInfo1.Trim()</label>
                        
                        </div>
                    }
                    @if (@item.NbreInfo2.Trim() != string.Empty)
                    {
                        <div class="tituloMedida">
                            <label>@item.NbreInfo2.Trim()</label>
                         
                        </div>
                    }
                </div>
            }
        }
    }

</div>



@if (OnSearch)
{
    <div class="spinner"></div>
    <p><em>Loading...</em></p>
}
else
{
    if(ListadoDesignaciones.Count==0)
    {
        <p><em>No hay datos para mostrar</em></p>
    }
    else
    {
        <div class="tableContainer">
             <table class="table table-striped table-hover table-sm table" >
                <thead>
                    <tr>
                        @foreach (SubRubro item in SubRubros)
                        {
                            if (item.Iden == idSubRubro)
                            {
                                <th>@item.NbreMedida1</th>
                                <th>@item.NbreMedida2</th>
                                <th>@item.NbreMedida3</th>
                                <th>@item.NbreMedida4</th>
                                <th>@item.NbreMedida5</th>
                                <th>@item.NbreMedida6</th>
                                <th>@item.NbreInfo1</th>
                                <th>@item.NbreInfo2</th>
                                <th>Designacion</th>
                                <th>Imagen</th>
                                <th>Imagen-2</th>
                            }
                        }
                    </tr>
                </thead>
                <tbody >
                    @foreach (var listado in ListadoDesignaciones)
                    {
                        <tr >
                            <td class="align-middle">@String.Format("{0:#.##}",@listado.M1)</td>
                            <td class="align-middle">@String.Format("{0:#.##}",@listado.M2)</td>
                            <td class="align-middle">@String.Format("{0:#.##}",@listado.M3)</td>
                            <td class="align-middle">@String.Format("{0:#.##}",@listado.M4)</td>
                            <td class="align-middle">@String.Format("{0:#.##}",@listado.M5)</td>
                            <td class="align-middle">@String.Format("{0:#.##}",@listado.M6)</td>
                            <td class="align-middle">@listado.I1</td>
                            <td class="align-middle">@listado.I2</td>
                            <td class="align-middle">@listado.Designacion</td>
                            <td class="align-middle">
                                <img src="Images/Products/@listado.foto" alt="imgen"  width=100 height=100 />
                            </td>
                            <td class="align-middle">
                                <img src="Images/Products/@listado.plano" alt="imgen"  width=100 height=100 />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
       </div>
    
    }
    
}

@code {

    private List<Rubros> Rubros = new List<Rubros>();
    private string idRubro = "0";

    private List<SubRubro> SubRubros = new List<SubRubro>();
    private int idSubRubro = 0;

    private string imagenSubrubro= string.Empty;

    private List<DesignacionesMedidas> ListadoDesignaciones = new();

    private string Med1 = string.Empty;
    private string Med2 = string.Empty;
    private string Med3 = string.Empty;
    private string Med4 = string.Empty;
    private string Med5 = string.Empty;
    private string Med6 = string.Empty;
    private string Inf1 = string.Empty;
    private string Inf2 = string.Empty;

    bool OnSearch = false;


    protected override async Task OnInitializedAsync()
    {
        Rubros = await Repositorio.ObtenerRubros();
    }

    private async Task RubroHasChanged(string idRubroElejido)
    {
        idSubRubro = 0;
        SubRubros.Clear();
        ClearInputs();

        //actualizamos idRubro para que quede en el select
        idRubro = idRubroElejido;
        //cargamos el select (actualizando el list MarcasVehiculos) con el valor del id del segmento elegido
        int codigoRubro = Convert.ToInt32(idRubroElejido);
        SubRubros = await Repositorio.ObtenerSubRubros(codigoRubro);
    }

    private  void SubRubroHasChanged(int idSubRubroElejido)
    {
        idSubRubro = idSubRubroElejido;
        ClearInputs();
        var SubRubroelegido = SubRubros.Where(x => x.Iden == idSubRubroElejido).ToList();
        imagenSubrubro = SubRubroelegido[0].Imagen.ToString();
    }

    private async Task BuscarArticulos()
    {
        OnSearch = true;
        await Task.Delay(50);

        Dictionary<string, string> dicRubrosySubrubros = new Dictionary<string, string>()
        {
            {"Rubro", idRubro },
            {"Subrubro",idSubRubro.ToString() }
        };


        Dictionary<string, string> dicMedidas = new Dictionary<string, string>()
        {
            {"M1", Med1 },
            {"M2", Med2 },
            {"M3", Med3 },
            {"M4", Med4 },
            {"M5", Med5 },
            {"M6", Med6 }
        };

        ListadoDesignaciones = await Repositorio.ObtenerDesignacionesMedidas(dicRubrosySubrubros,dicMedidas);

        OnSearch = false;
    }

    private void ClearInputs()
    {
        Med1 = string.Empty;
        Med2 = string.Empty;
        Med3 = string.Empty;
        Med4 = string.Empty;
        Med5 = string.Empty;
        Med6 = string.Empty;
        Inf1 = string.Empty;
        Inf2 = string.Empty;
        ListadoDesignaciones.Clear();
    }

}
